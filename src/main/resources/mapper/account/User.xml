<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="User">
    <resultMap id="selectResult" type="User">
        <result property="userId" column="user_id"/>
        <result property="username" column="nickname"/>
        <result property="password" column="user_password"/>
        <result property="email" column="email_address"/>
        <result property="token" column="user_token"/>
        <result property="status" column="status"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="dateOfBirthday" column="date_of_birth"/>
        <result property="userType" column="user_type"/>
        <result property="sex" column="sex"/>
        <result property="lastLoginDate" column="last_login_date"/>
        <result property="flagNotification" column="flg_notif_bets"/>
    </resultMap>

    <select id="selectUserById" parameterType="int" resultMap="selectResult">
        select user_id,
              nickname,
              email_address,
              user_token,
              first_name,
              last_name,
              date_of_birth,
              user_type,
              last_login_date,
              count_login,
              status,
              flg_notif_bets,
              sex
        from users where user_id = #{userId}
    </select>

    <update id="actualizarPerfil" parameterType="User">
        UPDATE users
        SET
            first_name = #{firstName}, last_name = #{lastName},
            date_of_birth = #{dateOfBirthday},  email_address = #{email},
            sex = #{sex}, flg_notif_bets = #{flagNotification}
        WHERE user_id = #{userId}
    </update>

    <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyProperty="user_id">
        INSERT INTO users (
            nickname, email_address, user_password)
        VALUES (
            #{username}, #{email}, md5(#{password}))
    </insert>

    <select id="validateLogin" parameterType="User" resultMap="selectResult">
        select user_id,
              nickname,
              email_address,
              user_token,
              first_name,
              last_name,
              date_of_birth,
              user_type,
              last_login_date,
              count_login,
              status,
              sex,
              flg_notif_bets
        from users where nickname = #{username} and user_password = md5(#{password})
    </select>

    <select id="checkUsernameExists" parameterType="User" resultMap="selectResult">
       select user_id, nickname, email_address,
          user_token, first_name, last_name, date_of_birth, user_type,
          last_login_date, count_login, status, sex, flg_notif_bets
        from users where nickname = #{username}
    </select>

    <select id="checkEmailExists" parameterType="User" resultMap="selectResult">
       select user_id, nickname, email_address,
          user_token, first_name, last_name, date_of_birth, user_type,
          last_login_date, count_login, status, sex, flg_notif_bets
        from users where email_address = #{email}
    </select>

    <select id="selectAllUsers" resultMap="selectResult">
        select user_id,
              nickname,
              email_address,
              user_token,
              first_name,
              last_name,
              date_of_birth,
              user_type,
              last_login_date,
              count_login,
              status,
              sex, flg_notif_bets
        from users
    </select>

    <update id="changePassword" parameterType="User">
        UPDATE users
        SET
            user_password = md5(#{password})
        WHERE user_id = #{userId}
    </update>

</mapper>