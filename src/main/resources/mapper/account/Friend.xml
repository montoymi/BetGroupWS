<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Friend">
    <resultMap id="selectResult" type="Friend">
        <result property="id" column="friend_id"/>
        <result property="idUser" column="user_friend_id"/>
        <result property="idFriend" column="friend_user_id"/>
        <result property="status" column="friend_status"/>
        <result property="user.userId" column="user_id"/>
        <result property="user.firstName" column="first_name"/>
        <result property="user.lastName" column="last_name"/>
        <result property="user.username" column="nickname"/>
        <result property="user.email" column="email"/>
        <result property="amigo.userId" column="ffriend_user_id"/>
        <result property="amigo.firstName" column="ffriend_first_name"/>
        <result property="amigo.lastName" column="ffriend_last_name"/>
        <result property="amigo.username" column="ffriend_nickname"/>
        <result property="amigo.email" column="ffriend_email"/>

    </resultMap>

    <select id="checkUserIsNotFriend" parameterType="Friend" resultMap="selectResult">
        select
            fr.id as friend_id,
            fr.friend_id as user_friend_id,
            fr.user_id as friend_user_id
        from friends as fr
        where user_id = #{idUser} and friend_id = #{idFriend}
    </select>

    <select id="getFriendListByUserId" parameterType="Friend" resultMap="selectResult">
        select
          fr.id as friend_id,
          fr.user_id as user_friend_id,
          fr.friend_id as friend_user_id,
          fr.status as friend_status,
          frus.user_id as ffriend_user_id,
          frus.first_name as ffriend_first_name,
          frus.last_name as ffriend_last_name,
          frus.nickname as ffriend_nickname,
          frus.email_address as ffriend_email,
          frus.sex as ffriend_sex,
          us.user_id as user_id,
          us.first_name as first_name,
          us.last_name as last_name,
          us.nickname as nickname,
          us.email_address as email
        from friends as fr,
          users   as us,
          users   as frus
        where us.user_id = fr.user_id
              and fr.friend_id = frus.user_id
              and fr.user_id =  #{idUser}
    </select>

    <insert id="addFriend" parameterType="Friend" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO friends (
        user_id, friend_id, status)
        VALUES (
        #{idUser}, #{idFriend}, 0)
    </insert>

    <delete id="deleteFriend" parameterType="Friend">
        DELETE FROM friends
        WHERE id = #{id}
    </delete>


</mapper>
