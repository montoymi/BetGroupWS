<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PollaHeaders">
    <resultMap id="selectResult" type="PollaHeader">
        <result property="pollaId" column="id"/>
        <result property="pollaName" column="polla_name"/>
        <result property="templateHeaderId" column="template_header_id"/>
        <result property="adminId" column="admin_user_id"/>
        <result property="admin.userId" column="user_id"/>
        <result property="admin.username" column="nickname"/>
        <result property="admin.email" column="email_address"/>
        <result property="admin.firstName" column="first_name"/>
        <result property="admin.lastName" column="last_name"/>
        <result property="pollaCost" column="credit_amount"/>
        <result property="accessFlag" column="access_flag"/>
        <result property="enabled_flag" column="status"/>
        <result property="password" column="password"/>
        <result property="costFlag" column="cost_flag"/>
        <result property="image" column="image"/>
        <result property="numWildcards" column="num_wildcard"/>
        <result property="image" column="image"/>
        <result property="modePollaFlag" column="mode_polla_flg"/>
        <result property="modePollitaFlag" column="mode_pollita_flg"/>
        <result property="modeWildcardFlag" column="mode_wildcard_flg"/>
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
        <result property="total_bet" column="total_bet"/>
        <result property="numParticipants" column="num_participants"/>
        <result property="numMatchs" column="num_matchs"/>
        <result property="numEvents" column="num_events"/>
    </resultMap>

	<select id="getPollaHeaderListByMatchId" parameterType="int" resultMap="selectResult">
        SELECT ph.*
          FROM polla_headers AS ph, polla_matches as pm, matchs as ma
         WHERE ph.id = pm.polla_header_id AND
               pm.match_id = ma.id AND
               ma.id = #{matchId} AND
               ph.status = 1
    </select>

    <select id="getMisPollasByUserId" parameterType="int" resultMap="selectResult">
        SELECT ph.*,
               (select count(pp1.*) as num_participants from polla_participants as pp1 where pp1.polla_header_id = ph.id),
	       	   (select count(pev.*) as num_events from polla_events as pev where pev.polla_header_id = ph.id),
	           (select count(pm.*) as num_matchs from polla_matches as pm where pm.polla_header_id = ph.id),
               u.nickname
          FROM polla_headers AS ph, polla_participants AS pp, users as u
         WHERE ph.id = pp.polla_header_id AND
               ph.admin_user_id = u.user_id AND
               pp.user_id = #{userId}
      ORDER BY ph.status, ph.start_date asc, num_participants desc, ph.polla_name
    </select>

    <select id="getPollasDisponiblesByUserId" parameterType="PollaHeader" resultMap="selectResult">
        select ph.*,
       		  (select count(pp1.*) as num_participants from polla_participants as pp1 where pp1.polla_header_id = ph.id),
       		  (select count(pev.*) as num_events from polla_events as pev where pev.polla_header_id = ph.id),
       		  (select count(pm.*) as num_matchs from polla_matches as pm where pm.polla_header_id = ph.id),
       		  u.nickname
		 from polla_headers as ph, users as u
		where ph.admin_user_id = u.user_id and
      			not exists (select 1 from polla_participants pp
            	  	       where pp.polla_header_id = ph.id and
			 					 pp.user_id = #{userId}  )
      		and ph.start_date > now() and ph.status = 2
			order by ph.start_date asc, num_participants desc, ph.polla_name

    </select>

    <select id="createBetGroup" statementType="CALLABLE" parameterType="map">
        { call xx_create_betgroup (
            #{pollaHeader.pollaName, mode=IN, jdbcType=VARCHAR},
            #{pollaHeader.accessFlag, mode=IN, jdbcType=INTEGER},
            #{pollaHeader.password, mode=IN, jdbcType=VARCHAR},
            #{pollaHeader.costFlag, mode=IN, jdbcType=INTEGER},
            #{pollaHeader.pollaCost, mode=IN, jdbcType=INTEGER},
            #{pollaHeader.adminId, mode=IN, jdbcType=INTEGER},
            #{pollaHeader.templateHeaderId, mode=IN, jdbcType=INTEGER},
            #{pollaHeader.modePollaFlag, mode=IN, jdbcType=INTEGER},
            #{pollaHeader.modePollitaFlag, mode=IN, jdbcType=INTEGER},
            #{pollaHeader.modeWildcardFlag, mode=IN, jdbcType=INTEGER},
            #{mensaje,mode=OUT, jdbcType=VARCHAR }
        )}
    </select>

    <select id="getPollaById" parameterType="int" resultMap="selectResult">
        SELECT ph.*,
               (select count(pp1.*) as num_participants from polla_participants as pp1 where pp1.polla_header_id = ph.id),
               (select count(pev.*) as num_events from polla_events as pev where pev.polla_header_id = ph.id),
               (select count(pm.*) as num_matchs from polla_matches as pm where pm.polla_header_id = ph.id),
               u.nickname
          FROM polla_headers AS ph, users as u
         WHERE ph.admin_user_id = u.user_id AND
               ph.id = #{id}
      ORDER BY ph.status desc, ph.start_date asc, end_date, polla_name
    </select>

    <select id="validatePollaPassword" parameterType="PollaHeader" resultType="int">
        SELECT count(1)
        FROM polla_headers ph
        WHERE ph.id = #{pollaId} AND ph.password = #{password}
    </select>


    <select id="getPollaGameRules" parameterType="map" resultType="String">
        select * from xx_get_rules(
            #{pollaHeader.modePollaFlag},--p_polla_flg integer,
            #{pollaHeader.modePollitaFlag},--p_pollita_flg integer,
            #{pollaHeader.modeWildcardFlag},--p_wildcards_flg integer,
            #{pollaHeader.accessFlag},--p_public_flg integer,
            #{pollaHeader.costFlag},--p_cost_flag integer,
            #{pollaHeader.pollaCost},--p_cost integer,
            #{pollaHeader.numEvents},--p_num_events integer,
            #{pollaHeader.numWildcards},--p_num_wildcards integer,
            1,--p_num_players_prize_polla integer,
            1,--p_num_players_prize_pollita integer,
            #{lang})

    </select>


</mapper>
